stages:
  ingest_kaggle:
    cmd: >
      python scripts/data_ingestion/descarga_kaggle_reviews.py
      --out data/landing/sephora/raw
    deps:
      - scripts/data_ingestion/descarga_kaggle_reviews.py
    outs:
      - data/landing/sephora/raw

  conversion_a_delta:
    cmd: >
      python scripts/data_cleaning/conversion_a_delta.py
      --input data/landing/sephora/raw
      --output data/landing/sephora/delta
    deps:
      - scripts/data_cleaning/conversion_a_delta.py
      - data/landing/sephora/raw
    outs:
      - data/landing/sephora/delta

  trusted_clean_driver:
    cmd: python scripts/data_cleaning/trusted_clean_driver.py --input data/landing/sephora/delta --output data/trusted/sephora_clean
    deps:
      - scripts/data_cleaning/trusted_clean_driver.py
      - scripts/data_cleaning/trusted_clean_single.py
      - data/landing/sephora/delta
    outs:
      - data/trusted/sephora_clean

  merge_trusted_reviews:
    cmd: python scripts/data_cleaning/merge_trusted_reviews.py --input-dir data/trusted/sephora_clean --output data/trusted/reviews_full
    deps:
      - scripts/data_cleaning/merge_trusted_reviews.py
      - data/trusted/sephora_clean
    outs:
      - data/trusted/reviews_full

  # === EDA FULL ===
  eda_full:
    cmd: >
      python scripts/EDA/eda_reviews.py
      --input data/trusted/reviews_full
      --outdir reports/eda/full
      --tokenizer albert-base-v2
    deps:
      - scripts/EDA/eda_reviews.py
      - data/trusted/reviews_full
      - params.yaml
    outs:
      - reports/eda/full

  # === SAMPLE ESTRATIFICADO / BALANCEADO ===
  trusted_sample_30:
    cmd: >
      python scripts/data_cleaning/sample_reviews.py
      --input  data/trusted/reviews_full
      --output data/trusted/reviews_sample_30pct
      --frac ${sampling.frac}
      --by ${sampling.by}
      --format ${sampling.format}
      --seed ${sampling.seed}
      --coalesce ${sampling.coalesce}
      --balance ${sampling.balance}
    deps:
      - scripts/data_cleaning/sample_reviews.py
      - data/trusted/reviews_full
    outs:
      - data/trusted/reviews_sample_30pct
    params:
      - sampling

  # === EDA DEL SAMPLE ===
  eda_sample_30:
    cmd: >
      python scripts/EDA/eda_reviews.py
      --input data/trusted/reviews_sample_30pct
      --outdir reports/eda/sample_30
      --tokenizer albert-base-v2
    deps:
      - scripts/EDA/eda_reviews.py
      - data/trusted/reviews_sample_30pct
      - params.yaml
    outs:
      - reports/eda/sample_30

  # === COMPARATIVA FULL vs SAMPLE (parametrizada) ===
  eda_compare_full_vs_30:
    cmd: >
      python scripts/EDA/eda_compare.py
      --a ${eda_compare_full_vs_30.a}
      --b ${eda_compare_full_vs_30.b}
      --outdir ${eda_compare_full_vs_30.outdir}
      --by ${eda_compare_full_vs_30.by}
      --input-format ${eda_compare_full_vs_30.input_format}
      --tokenizer ${eda_compare_full_vs_30.tokenizer}
      --sample-rows ${eda_compare_full_vs_30.sample_rows}
      --max-len ${eda_compare_full_vs_30.max_len}
      --clip-tokens ${eda_compare_full_vs_30.clip_tokens}
      --silence-tokenizer-warnings ${eda_compare_full_vs_30.silence_tokenizer_warnings}
    deps:
      - scripts/EDA/eda_compare.py
      - ${eda_compare_full_vs_30.a}
      - ${eda_compare_full_vs_30.b}
    outs:
      - ${eda_compare_full_vs_30.outdir}
    params:
      - eda_compare_full_vs_30

  split_train_val_test:
    cmd: >
      python scripts/training/prepare_test_parquet.py
      --input  data/trusted/reviews_sample_30pct
      --outdir data/exploitation/modelos_input/sample_tvt
      --seed 42
    deps:
      - scripts/training/prepare_test_parquet.py
      - data/trusted/reviews_sample_30pct
      - params.yaml
    outs:
      - data/exploitation/modelos_input/sample_tvt

  make_rest_from_full:
    cmd: >
      python scripts/data_cleaning/make_rest_from_full.py
      --full data/trusted/reviews_full
      --sample-root data/exploitation/modelos_input/sample_tvt
      --sample-delta data/trusted/reviews_sample_30pct
      --out data/exploitation/modelos_input/rest_from_full
      --format parquet
      --coalesce 64
    deps:
      - scripts/data_cleaning/make_rest_from_full.py
      - data/trusted/reviews_full
      - data/exploitation/modelos_input/sample_tvt/train
      - data/exploitation/modelos_input/sample_tvt/val
      - data/exploitation/modelos_input/sample_tvt/test
      - data/trusted/reviews_sample_30pct
    outs:
      - data/exploitation/modelos_input/rest_from_full

  train_albert_sample:
    cmd: >
      MLFLOW_RUN_NAME=albert_sample_30pct
      python scripts/training/train_albert_from_parquets.py
      --train data/exploitation/modelos_input/sample_tvt/train
      --val   data/exploitation/modelos_input/sample_tvt/val
      --model-out models/albert_sample_30pct
      --params params.yaml
    deps:
      - scripts/training/train_albert_from_parquets.py
      - data/exploitation/modelos_input/sample_tvt/train
      - data/exploitation/modelos_input/sample_tvt/val
      - params.yaml
    outs:
      - models/albert_sample_30pct

  evaluate_albert_sample:
    cmd: >
      PYTHONNOUSERSITE=1 TRANSFORMERS_NO_TF=1 TRANSFORMERS_NO_JAX=1 USE_TF=0 USE_JAX=0
      /home/pedro/MASTER_BIGDATA/venv/bin/python scripts/training/evaluate_albert.py
      --model_dir models/albert_sample_30pct
      --test_parquet data/exploitation/modelos_input/sample_tvt/test
      --output_dir reports/albert_sample_30pct/eval
    deps:
      - scripts/training/evaluate_albert.py
      - models/albert_sample_30pct
      - data/exploitation/modelos_input/sample_tvt/test
    outs:
      - reports/albert_sample_30pct/eval

  evaluate_albert_rest:
    cmd: >
      python scripts/training/evaluate_albert.py
      --model_dir models/albert_sample_30pct
      --test_parquet data/exploitation/modelos_input/rest_from_full
      --output_dir reports/albert_sample_30pct/eval_rest
      --max_len 192
    deps:
      - scripts/training/evaluate_albert.py
      - models/albert_sample_30pct
      - data/exploitation/modelos_input/rest_from_full
    outs:
      - reports/albert_sample_30pct/eval_rest

  merge_reviews_product_info:
    cmd: >
      python scripts/data_cleaning/merge_reviews_product_info.py
      --reviews_path ${paths.reviews_full}
      --product_info_path ${paths.product_info}
      --output_path ${paths.merged_out}
      --input_format ${merge_reviews_product_info.input_format}
      --output_format ${merge_reviews_product_info.output_format}
      --repartition ${merge_reviews_product_info.repartition}
      --coalesce ${merge_reviews_product_info.coalesce}
      --product_prefix ${merge_reviews_product_info.product_prefix}
      --broadcast_product_info ${merge_reviews_product_info.broadcast_product_info}
    deps:
      - scripts/data_cleaning/merge_reviews_product_info.py
      - ${paths.reviews_full}
      - ${paths.product_info}
    outs:
      - ${paths.merged_out}
    params:
      - paths
      - merge_reviews_product_info.input_format
      - merge_reviews_product_info.output_format
      - merge_reviews_product_info.repartition
      - merge_reviews_product_info.coalesce
      - merge_reviews_product_info.product_prefix
      - merge_reviews_product_info.broadcast_product_info

  gen_aspects_json:
    cmd: >
      python -c "import os, json, yaml;
      d=yaml.safe_load(open('params.yaml'));
      os.makedirs('configs', exist_ok=True);
      json.dump(d['aspects_ontology_en'], open('configs/aspects_en.json','w'), ensure_ascii=False, indent=2)"
    deps:
      - params.yaml
    outs:
      - configs/aspects_en.json
    params:
      - aspects_ontology_en

  build_ate_trusted:
    cmd: >
      python scripts/absa/build_ate_trusted_from_ontology.py
      --input_path ${ate_trusted.input_path}
      --input_format ${ate_trusted.input_format}
      --text_col ${ate_trusted.text_col}
      --id_col ${ate_trusted.id_col}
      --ontology_json ${ate_trusted.ontology_json}
      --output_dir ${ate_trusted.output_dir}
      --train_filename ${ate_trusted.train_filename}
      --valid_filename ${ate_trusted.valid_filename}
      --sample_fraction ${ate_trusted.sample_fraction}
      --max_reviews ${ate_trusted.max_reviews}
      --train_valid_split ${ate_trusted.train_valid_split}
      --keep_neg_ratio ${ate_trusted.keep_neg_ratio}
      --seed ${ate_trusted.seed}
    deps:
      - scripts/absa/build_ate_trusted_from_ontology.py
      - ${ate_trusted.input_path}
      - ${ate_trusted.ontology_json}
    outs:
      - ${ate_train.train_path}
      - ${ate_train.valid_path}
    params:
      - ate_trusted
      - ate_train.train_path
      - ate_train.valid_path

  train_ate_bio:
    cmd: >
      python scripts/absa/train_ate_bio.py
      --train_path ${ate_train.train_path}
      --valid_path ${ate_train.valid_path}
      --model_name ${ate_train.model_name}
      --output_dir ${ate_train.output_dir}
      --epochs ${ate_train.epochs}
      --lr ${ate_train.lr}
      --batch_size ${ate_train.batch_size}
      --grad_accum ${ate_train.grad_accum}
      --max_length ${ate_train.max_length}
      --fp16 ${ate_train.fp16}
      --bf16 ${ate_train.bf16}
      --grad_checkpoint ${ate_train.grad_checkpoint}
      --dataloader_workers ${ate_train.dataloader_workers}
    deps:
      - scripts/absa/train_ate_bio.py
      - ${ate_train.train_path}
      - ${ate_train.valid_path}
    outs:
      - ${ate_train.output_dir}
    params:
      - ate_train

  infer_ate_spans:
    cmd: >
      python scripts/absa/infer_ate_spans.py
      --model_dir ${ate_infer.model_dir}
      --input_path ${ate_infer.input_path}
      --input_format ${ate_infer.input_format}
      --text_col ${ate_infer.text_col}
      --id_col ${ate_infer.id_col}
      --output_parquet ${ate_infer.output_parquet}
      --max_length ${ate_infer.max_length}
      --batch_size ${ate_infer.batch_size}
      --flush_rows ${ate_infer.flush_rows}
    deps:
      - scripts/absa/infer_ate_spans.py
      - ${ate_infer.input_path}
      - ${ate_infer.model_dir}
    outs:
      - ${ate_infer.output_parquet}
    params:
      - ate_infer

  map_ate_spans:
    cmd: >
      python scripts/absa/map_spans_to_ontology.py
      --spans_parquet ${ate_map.spans_parquet}
      --ontology_json ${ate_map.ontology_json}
      --output_parquet ${ate_map.output_parquet}
      --threshold ${ate_map.threshold}
    deps:
      - scripts/absa/map_spans_to_ontology.py
      - ${ate_map.spans_parquet}
      - ${ate_map.ontology_json}
    outs:
      - ${ate_map.output_parquet}
    params:
      - ate_map
  convert_delta_to_parquet_snapshot:
    cmd: python scripts/infer/convert_delta_to_parquet_snapshot.py --input_path data/trusted/reviews_full --output_path data/trusted/reviews_full_snapshot.parquet
    deps:
      - scripts/infer/convert_delta_to_parquet_snapshot.py
      - data/trusted/reviews_full
    outs:
      - data/trusted/reviews_full_snapshot.parquet
  infer_sentiment_full_pandas:
    cmd: >-
      python scripts/infer/infer_sentiment_full_pandas.py
      --model_dir models/albert_sample_30pct
      --input_parquet data/trusted/reviews_full_snapshot.parquet
      --output_parquet reports/albert_sample_30pct/infer_full_pandas/predictions.parquet
      --params_file params.yaml
    deps:
      - scripts/infer/infer_sentiment_full_pandas.py
      - models/albert_sample_30pct
      - data/trusted/reviews_full_snapshot.parquet
      - params.yaml
    outs:
      - reports/albert_sample_30pct/infer_full_pandas/predictions.parquet
    params:
      - infer_sentiment_full_pandas.batch_size
      - infer_sentiment_full_pandas.max_length
      - infer_sentiment_full_pandas.id_col
      - infer_sentiment_full_pandas.text_col

  absa_build_all:
    cmd: >
      python scripts/absa/build_absa_dataset.py
      --spans_parquet reports/absa/ate_spans.parquet
      --map_parquet   reports/absa/ate_spans_mapped.parquet
      --sentiment_parquet reports/albert_sample_30pct/infer_full_pandas/predictions.parquet
      --id_col review_id
      --span_text_col aspect_span
      --category_col aspect_norm
      --sentiment_col pred_3
      --output_dir reports/absa/final_all
    deps:
      - scripts/absa/build_absa_dataset.py
      - reports/absa/ate_spans.parquet
      - reports/absa/ate_spans_mapped.parquet
      - reports/albert_sample_30pct/infer_full_pandas/predictions.parquet
      - params.yaml
    outs:
      - reports/absa/final_all:
          persist: true


